{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getNote, updateNote } from \"@/indexdb.js\";\nexport default {\n  data() {\n    return {\n      conteudo: \"\",\n      idNota: null\n    };\n  },\n  methods: {\n    async carregarNota() {\n      this.idNota = this.$route.params.id;\n      try {\n        const nota = await getNote(\"notesDB\", \"notes\", this.idNota);\n        this.conteudo = nota.content;\n      } catch (error) {\n        console.error(\"Erro ao obter detalhes da nota do IndexedDB\", error);\n      }\n    },\n    async salvarEdicao() {\n      try {\n        await updateNote(\"notesDB\", \"notes\", this.idNota, {\n          content: this.conteudo\n        });\n        console.log(\"Nota atualizada com sucesso!\");\n        this.$router.push('/HomePage');\n      } catch (error) {\n        console.error(\"Erro ao salvar a edição da nota no IndexedDB\", error);\n      }\n    }\n  },\n  created() {\n    this.carregarNota();\n  }\n};","map":{"version":3,"names":["getNote","updateNote","data","conteudo","idNota","methods","carregarNota","$route","params","id","nota","content","error","console","salvarEdicao","log","$router","push","created"],"sources":["src/views/EditNote.vue"],"sourcesContent":["<template>\n  <v-container>\n    <h1>Editar Nota</h1>\n\n    <v-form @submit.prevent=\"salvarEdicao\">\n      <v-text-field v-model=\"conteudo\" label=\"Conteúdo da Nota\" required></v-text-field>\n\n      <v-btn type=\"submit\" color=\"primary\">Salvar Edição</v-btn>\n    </v-form>\n  </v-container>\n</template>\n\n<script>\nimport { getNote, updateNote } from \"@/indexdb.js\";\n\nexport default {\n  data() {\n    return {\n      conteudo: \"\",\n      idNota: null,\n    };\n  },\n  methods: {\n    async carregarNota() {\n      this.idNota = this.$route.params.id;\n\n      try {\n        const nota = await getNote(\"notesDB\", \"notes\", this.idNota);\n        this.conteudo = nota.content;\n      } catch (error) {\n        console.error(\"Erro ao obter detalhes da nota do IndexedDB\", error);\n      }\n    },\n    async salvarEdicao() {\n      try {\n        await updateNote(\"notesDB\", \"notes\", this.idNota, { content: this.conteudo });\n        console.log(\"Nota atualizada com sucesso!\");\n\n        this.$router.push('/HomePage');\n      } catch (error) {\n        console.error(\"Erro ao salvar a edição da nota no IndexedDB\", error);\n      }\n    },\n  },\n  created() {\n    this.carregarNota();\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"],"mappings":";AAaA,SAAAA,OAAA,EAAAC,UAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,aAAA;MACA,KAAAF,MAAA,QAAAG,MAAA,CAAAC,MAAA,CAAAC,EAAA;MAEA;QACA,MAAAC,IAAA,SAAAV,OAAA,0BAAAI,MAAA;QACA,KAAAD,QAAA,GAAAO,IAAA,CAAAC,OAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,gDAAAA,KAAA;MACA;IACA;IACA,MAAAE,aAAA;MACA;QACA,MAAAb,UAAA,0BAAAG,MAAA;UAAAO,OAAA,OAAAR;QAAA;QACAU,OAAA,CAAAE,GAAA;QAEA,KAAAC,OAAA,CAAAC,IAAA;MACA,SAAAL,KAAA;QACAC,OAAA,CAAAD,KAAA,iDAAAA,KAAA;MACA;IACA;EACA;EACAM,QAAA;IACA,KAAAZ,YAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}