{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Rafael/Desktop/health-web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Rafael/Desktop/health-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { addNote } from \"@/indexdb.js\";\nexport default {\n  name: \"BlocoAnotacoes\",\n  data: function data() {\n    return {\n      nota: \"\",\n      dbName: \"notesDB\",\n      storeName: \"notes\"\n    };\n  },\n  methods: {\n    limparNota: function limparNota() {\n      this.nota = \"\";\n    },\n    salvarNota: function salvarNota() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var note;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              note = {\n                content: _this.nota\n              };\n              _context.prev = 1;\n              _context.next = 4;\n              return addNote(_this.dbName, _this.storeName, note);\n            case 4:\n              console.log(\"Nota salva no IndexDB com sucesso!\");\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(\"Erro ao salvar nota no IndexDB\", _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 7]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["addNote","name","data","nota","dbName","storeName","methods","limparNota","salvarNota","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","note","wrap","_callee$","_context","prev","next","content","console","log","t0","error","stop"],"sources":["src/views/BlocoAnotacoes.vue"],"sourcesContent":["<template>\r\n  <v-app>\r\n    <v-container>\r\n      <v-row>\r\n        <v-col cols=\"12\">\r\n          <v-textarea\r\n            v-model=\"nota\"\r\n            label=\"Bloco de Notas\"\r\n            outlined\r\n            rows=\"10\"\r\n            solo\r\n          ></v-textarea>\r\n        </v-col>\r\n      </v-row>\r\n      <v-row>\r\n        <v-col cols=\"12\" class=\"text-center\">\r\n          <v-btn @click=\"limparNota\" color=\"error\">Limpar</v-btn>\r\n          <v-btn @click=\"salvarNota\" color=\"primary\">Salvar</v-btn>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport { addNote } from \"@/indexdb.js\";\r\n\r\nexport default {\r\n  name: \"BlocoAnotacoes\",\r\n  data() {\r\n    return {\r\n      nota: \"\", \r\n      dbName: \"notesDB\", \r\n      storeName: \"notes\", \r\n    };\r\n  },\r\n  methods: {\r\n    limparNota() {\r\n      this.nota = \"\";\r\n    },\r\n    async salvarNota() {\r\n      const note = { content: this.nota }; \r\n      try {\r\n        await addNote(this.dbName, this.storeName, note);\r\n        console.log(\"Nota salva no IndexDB com sucesso!\");\r\n      } catch (error) {\r\n        console.error(\"Erro ao salvar nota no IndexDB\", error);\r\n      }\r\n    },\r\n   \r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";;AAyBA,SAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,IAAA;MACAC,MAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA,WAAAA,WAAA;MACA,KAAAJ,IAAA;IACA;IACAK,UAAA,WAAAA,WAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,IAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACAL,IAAA;gBAAAM,OAAA,EAAAX,KAAA,CAAAN;cAAA;cAAAc,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEAnB,OAAA,CAAAS,KAAA,CAAAL,MAAA,EAAAK,KAAA,CAAAJ,SAAA,EAAAS,IAAA;YAAA;cACAO,OAAA,CAAAC,GAAA;cAAAL,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAM,EAAA,GAAAN,QAAA;cAEAI,OAAA,CAAAG,KAAA,mCAAAP,QAAA,CAAAM,EAAA;YAAA;YAAA;cAAA,OAAAN,QAAA,CAAAQ,IAAA;UAAA;QAAA,GAAAZ,OAAA;MAAA;IAEA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}