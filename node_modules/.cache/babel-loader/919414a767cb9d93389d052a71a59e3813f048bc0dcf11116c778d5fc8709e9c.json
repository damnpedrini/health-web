{"ast":null,"code":"import \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nexport default {\n  data: function data() {\n    return {\n      altura: \"\",\n      peso: 0,\n      resultado: \"\"\n    };\n  },\n  methods: {\n    calcularIMC: function calcularIMC() {\n      var alturaMetros = this.converterAlturaParaMetros(this.altura);\n      var imc = this.peso / (alturaMetros * alturaMetros);\n      if (imc < 18.5) {\n        this.resultado = \"Seu IMC \\xE9 \".concat(imc.toFixed(2), \", voc\\xEA est\\xE1 abaixo do peso.\");\n      } else if (imc < 25) {\n        this.resultado = \"Seu IMC \\xE9 \".concat(imc.toFixed(2), \", seu peso est\\xE1 normal.\");\n      } else if (imc < 30) {\n        this.resultado = \"Seu IMC \\xE9 \".concat(imc.toFixed(2), \", voc\\xEA est\\xE1 acima do peso.\");\n      } else {\n        this.resultado = \"Seu IMC \\xE9 \".concat(imc.toFixed(2), \", voc\\xEA est\\xE1 obeso.\");\n      }\n    },\n    converterAlturaParaMetros: function converterAlturaParaMetros(altura) {\n      // Converte altura no formato \"1,60\" para metros\n      var partesAltura = altura.split(\",\");\n      var metros = parseFloat(partesAltura[0]);\n      var centimetros = partesAltura[1] ? parseFloat(partesAltura[1]) : 0;\n      return metros + centimetros / 100;\n    },\n    formatarAltura: function formatarAltura() {\n      // Adiciona automaticamente a vírgula após o primeiro número\n      if (this.altura.length === 1 && !this.altura.includes(',')) {\n        this.altura += \",\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","altura","peso","resultado","methods","calcularIMC","alturaMetros","converterAlturaParaMetros","imc","concat","toFixed","partesAltura","split","metros","parseFloat","centimetros","formatarAltura","length","includes"],"sources":["src/views/CalculatorPage.vue"],"sourcesContent":["<template>\n  <div>\n    <header class=\"text-center mb-4\">\n      <h1 class=\"display-5 text-primary\" style=\"margin-bottom: 0.5em;\">Cálculo do Índice de Massa Corporal</h1>\n    </header>\n\n    <section class=\"mx-auto mt-5 p-4\" style=\"max-width: 400px; text-align: center;\">\n      <div class=\"mb-3\">\n        <label for=\"txtaltura\" class=\"form-label\">Altura: </label>\n        <input v-model=\"altura\" @input=\"formatarAltura\" type=\"text\" class=\"form-control\" id=\"txtaltura\">\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"txtpeso\" class=\"form-label\">Peso: </label>\n        <input v-model=\"peso\" type=\"number\" class=\"form-control\" id=\"txtpeso\" min=\"0\">\n      </div>\n\n      <button @click=\"calcularIMC\" class=\"btn btn-success\">Verificar</button>\n    </section>\n\n    <div id=\"res\" class=\"mt-4 text-center\">\n      <!-- Resultado será exibido aqui -->\n      {{ resultado }}\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      altura: \"\",\n      peso: 0,\n      resultado: \"\",\n    };\n  },\n  methods: {\n    calcularIMC() {\n      const alturaMetros = this.converterAlturaParaMetros(this.altura);\n      const imc = this.peso / (alturaMetros * alturaMetros);\n\n      if (imc < 18.5) {\n        this.resultado = `Seu IMC é ${imc.toFixed(2)}, você está abaixo do peso.`;\n      } else if (imc < 25) {\n        this.resultado = `Seu IMC é ${imc.toFixed(2)}, seu peso está normal.`;\n      } else if (imc < 30) {\n        this.resultado = `Seu IMC é ${imc.toFixed(2)}, você está acima do peso.`;\n      } else {\n        this.resultado = `Seu IMC é ${imc.toFixed(2)}, você está obeso.`;\n      }\n    },\n    converterAlturaParaMetros(altura) {\n      // Converte altura no formato \"1,60\" para metros\n      const partesAltura = altura.split(\",\");\n      const metros = parseFloat(partesAltura[0]);\n      const centimetros = partesAltura[1] ? parseFloat(partesAltura[1]) : 0;\n\n      return metros + centimetros / 100;\n    },\n    formatarAltura() {\n      // Adiciona automaticamente a vírgula após o primeiro número\n      if (this.altura.length === 1 && !this.altura.includes(',')) {\n        this.altura += \",\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  margin: 0;\n  background-color: #f8f9fa; /* Cor de fundo */\n}\n\nsection {\n  background-color: #ffffff; /* Cor de fundo do formulário */\n  padding: 20px;\n  border-radius: 10px; /* Borda arredondada */\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1); /* Sombra */\n}\n\n#res {\n  margin-top: 20px;\n  text-align: center;\n  color: #155724; /* Cor do texto */\n  background-color: #d4edda; /* Cor de fundo do resultado */\n  padding: 10px;\n  border-radius: 5px;\n}\n\n/* Estilo do botão Vue padrão */\n.btn-success {\n  background-color: #004d40;\n  color: #fff;\n  border: none;\n  padding: 10px;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.btn-success:hover {\n  background-color: #45a049;\n}\n</style>\n"],"mappings":";;;AA4BA;EACAA,IAAA,WAAAA,KAAA;IACA;MACAC,MAAA;MACAC,IAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA,WAAAA,YAAA;MACA,IAAAC,YAAA,QAAAC,yBAAA,MAAAN,MAAA;MACA,IAAAO,GAAA,QAAAN,IAAA,IAAAI,YAAA,GAAAA,YAAA;MAEA,IAAAE,GAAA;QACA,KAAAL,SAAA,mBAAAM,MAAA,CAAAD,GAAA,CAAAE,OAAA;MACA,WAAAF,GAAA;QACA,KAAAL,SAAA,mBAAAM,MAAA,CAAAD,GAAA,CAAAE,OAAA;MACA,WAAAF,GAAA;QACA,KAAAL,SAAA,mBAAAM,MAAA,CAAAD,GAAA,CAAAE,OAAA;MACA;QACA,KAAAP,SAAA,mBAAAM,MAAA,CAAAD,GAAA,CAAAE,OAAA;MACA;IACA;IACAH,yBAAA,WAAAA,0BAAAN,MAAA;MACA;MACA,IAAAU,YAAA,GAAAV,MAAA,CAAAW,KAAA;MACA,IAAAC,MAAA,GAAAC,UAAA,CAAAH,YAAA;MACA,IAAAI,WAAA,GAAAJ,YAAA,MAAAG,UAAA,CAAAH,YAAA;MAEA,OAAAE,MAAA,GAAAE,WAAA;IACA;IACAC,cAAA,WAAAA,eAAA;MACA;MACA,SAAAf,MAAA,CAAAgB,MAAA,gBAAAhB,MAAA,CAAAiB,QAAA;QACA,KAAAjB,MAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}