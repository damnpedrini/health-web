{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getAllNotes, deleteNote } from \"@/indexdb.js\";\nexport default {\n  data() {\n    return {\n      anotacoes: [],\n      dialogoExclusao: false,\n      indiceExclusao: null\n    };\n  },\n  methods: {\n    async exibirDialogoExclusao(index) {\n      this.indiceExclusao = index;\n      this.dialogoExclusao = true;\n    },\n    async confirmarExclusao() {\n      const index = this.indiceExclusao;\n      const anotacaoParaExcluir = this.anotacoes[index];\n      try {\n        await deleteNote(\"notesDB\", \"notes\", anotacaoParaExcluir.id);\n        console.log(\"Anotação excluída do IndexedDB com sucesso!\");\n        this.anotacoes.splice(index, 1);\n        this.dialogoExclusao = false;\n      } catch (error) {\n        console.error(\"Erro ao excluir anotação do IndexedDB\", error);\n      }\n    },\n    async mostrarDetalhes(index) {\n      const detalhes = this.anotacoes[index].content;\n      console.log('Detalhes da Anotação:', detalhes);\n      this.$router.push('/notas-salvas');\n    },\n    editarAnotacao(index) {\n      const notaId = this.anotacoes[index].id;\n      this.$router.push({\n        name: 'editar-nota',\n        params: {\n          id: notaId\n        }\n      });\n    },\n    async criarNovaAnotacao() {\n      this.$router.push('/BlocoAnotacoes');\n    },\n    async carregarAnotacoes() {\n      try {\n        const notes = await getAllNotes(\"notesDB\", \"notes\");\n        this.anotacoes = notes;\n      } catch (error) {\n        console.error(\"Erro ao obter anotações do IndexedDB\", error);\n      }\n    }\n  },\n  created() {\n    this.carregarAnotacoes();\n  }\n};","map":{"version":3,"names":["getAllNotes","deleteNote","data","anotacoes","dialogoExclusao","indiceExclusao","methods","exibirDialogoExclusao","index","confirmarExclusao","anotacaoParaExcluir","id","console","log","splice","error","mostrarDetalhes","detalhes","content","$router","push","editarAnotacao","notaId","name","params","criarNovaAnotacao","carregarAnotacoes","notes","created"],"sources":["src/views/Notes.vue"],"sourcesContent":["<template>\n  <v-container>\n    <h1>Todas as Anotações</h1>\n\n    <v-list>\n      <v-list-item-group v-if=\"anotacoes.length > 0\">\n        <v-list-item v-for=\"(anotacao, index) in anotacoes\" :key=\"index\">\n          <v-list-item-content @click=\"mostrarDetalhes(index)\">\n            <v-list-item-title>{{ anotacao.content }}</v-list-item-title>\n          </v-list-item-content>\n          <v-list-item-action>\n            <v-btn icon @click=\"exibirDialogoExclusao(index)\">\n              <v-icon>mdi-delete</v-icon>\n            </v-btn>\n            <v-btn icon @click=\"editarAnotacao(index)\">\n              <v-icon>mdi-pencil</v-icon>\n            </v-btn>\n          </v-list-item-action>\n        </v-list-item>\n      </v-list-item-group>\n      <v-list-item v-else>\n        <v-list-item-content>Nenhuma anotação encontrada.</v-list-item-content>\n      </v-list-item>\n    </v-list>\n\n    <v-dialog v-model=\"dialogoExclusao\" max-width=\"500\">\n      <v-card>\n        <v-card-title>Confirmação</v-card-title>\n        <v-card-text>\n          Tem certeza de que deseja excluir esta anotação?\n        </v-card-text>\n        <v-card-actions>\n          <v-btn @click=\"dialogoExclusao = false\">Cancelar</v-btn>\n          <v-btn @click=\"confirmarExclusao\" color=\"primary\">Confirmar</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-btn @click=\"criarNovaAnotacao\" color=\"primary\">+ Criar Anotação</v-btn>\n  </v-container>\n</template>\n\n<script>\nimport { getAllNotes, deleteNote } from \"@/indexdb.js\";\n\nexport default {\n  data() {\n    return {\n      anotacoes: [], \n      dialogoExclusao: false,\n      indiceExclusao: null, \n    };\n  },\n  methods: {\n    async exibirDialogoExclusao(index) {\n      this.indiceExclusao = index;\n      this.dialogoExclusao = true;\n    },\n    async confirmarExclusao() {\n      const index = this.indiceExclusao;\n      const anotacaoParaExcluir = this.anotacoes[index];\n\n      try {\n        await deleteNote(\"notesDB\", \"notes\", anotacaoParaExcluir.id);\n        console.log(\"Anotação excluída do IndexedDB com sucesso!\");\n\n        this.anotacoes.splice(index, 1);\n\n        this.dialogoExclusao = false;\n      } catch (error) {\n        console.error(\"Erro ao excluir anotação do IndexedDB\", error);\n      }\n    },\n    async mostrarDetalhes(index) {\n      const detalhes = this.anotacoes[index].content;\n      console.log('Detalhes da Anotação:', detalhes);\n\n      this.$router.push('/notas-salvas');\n    },\n    editarAnotacao(index) {\n      const notaId = this.anotacoes[index].id;\n\n      this.$router.push({ name: 'editar-nota', params: { id: notaId } });\n    },\n    async criarNovaAnotacao() {\n      this.$router.push('/BlocoAnotacoes'); \n    },\n    async carregarAnotacoes() {\n      try {\n        const notes = await getAllNotes(\"notesDB\", \"notes\");\n        this.anotacoes = notes;\n      } catch (error) {\n        console.error(\"Erro ao obter anotações do IndexedDB\", error);\n      }\n    },\n  },\n  created() {\n    this.carregarAnotacoes();\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"],"mappings":";AA2CA,SAAAA,WAAA,EAAAC,UAAA;AAEA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,eAAA;MACAC,cAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,sBAAAC,KAAA;MACA,KAAAH,cAAA,GAAAG,KAAA;MACA,KAAAJ,eAAA;IACA;IACA,MAAAK,kBAAA;MACA,MAAAD,KAAA,QAAAH,cAAA;MACA,MAAAK,mBAAA,QAAAP,SAAA,CAAAK,KAAA;MAEA;QACA,MAAAP,UAAA,qBAAAS,mBAAA,CAAAC,EAAA;QACAC,OAAA,CAAAC,GAAA;QAEA,KAAAV,SAAA,CAAAW,MAAA,CAAAN,KAAA;QAEA,KAAAJ,eAAA;MACA,SAAAW,KAAA;QACAH,OAAA,CAAAG,KAAA,0CAAAA,KAAA;MACA;IACA;IACA,MAAAC,gBAAAR,KAAA;MACA,MAAAS,QAAA,QAAAd,SAAA,CAAAK,KAAA,EAAAU,OAAA;MACAN,OAAA,CAAAC,GAAA,0BAAAI,QAAA;MAEA,KAAAE,OAAA,CAAAC,IAAA;IACA;IACAC,eAAAb,KAAA;MACA,MAAAc,MAAA,QAAAnB,SAAA,CAAAK,KAAA,EAAAG,EAAA;MAEA,KAAAQ,OAAA,CAAAC,IAAA;QAAAG,IAAA;QAAAC,MAAA;UAAAb,EAAA,EAAAW;QAAA;MAAA;IACA;IACA,MAAAG,kBAAA;MACA,KAAAN,OAAA,CAAAC,IAAA;IACA;IACA,MAAAM,kBAAA;MACA;QACA,MAAAC,KAAA,SAAA3B,WAAA;QACA,KAAAG,SAAA,GAAAwB,KAAA;MACA,SAAAZ,KAAA;QACAH,OAAA,CAAAG,KAAA,yCAAAA,KAAA;MACA;IACA;EACA;EACAa,QAAA;IACA,KAAAF,iBAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}