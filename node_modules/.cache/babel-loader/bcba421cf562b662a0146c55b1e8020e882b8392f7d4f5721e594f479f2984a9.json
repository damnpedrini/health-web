{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nexport default {\n  data: function data() {\n    return {\n      nome: \"\",\n      alturaMetros: 0,\n      alturaCentimetros: 0,\n      peso: 0,\n      resultado: \"\"\n    };\n  },\n  methods: {\n    calcularIMC: function calcularIMC() {\n      var alturaTotalMetros = this.alturaMetros + this.alturaCentimetros / 100;\n      var imc = this.peso / (alturaTotalMetros * alturaTotalMetros);\n      if (imc < 18.5) {\n        this.resultado = \"\".concat(this.nome, \", seu IMC \\xE9 \").concat(imc.toFixed(2), \", voc\\xEA est\\xE1 abaixo do peso.\");\n      } else if (imc < 25) {\n        this.resultado = \"\".concat(this.nome, \", seu IMC \\xE9 \").concat(imc.toFixed(2), \", seu peso est\\xE1 normal.\");\n      } else if (imc < 30) {\n        this.resultado = \"\".concat(this.nome, \", seu IMC \\xE9 \").concat(imc.toFixed(2), \", voc\\xEA est\\xE1 acima do peso.\");\n      } else {\n        this.resultado = \"\".concat(this.nome, \", seu IMC \\xE9 \").concat(imc.toFixed(2), \", voc\\xEA est\\xE1 obeso.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","nome","alturaMetros","alturaCentimetros","peso","resultado","methods","calcularIMC","alturaTotalMetros","imc","concat","toFixed"],"sources":["src/views/CalculatorPage.vue"],"sourcesContent":["<template>\n  <div>\n    <header class=\"text-center mb-4\">\n      <h1 class=\"display-5 text-primary\" style=\"margin-bottom: 0.5em;\">Cálculo do Índice de Massa Corporal</h1>\n    </header>\n\n    <section class=\"mx-auto mt-5 p-4\" style=\"max-width: 400px;\">\n      <div class=\"mb-3\">\n        <label for=\"txtname\" class=\"form-label\">Nome:</label>\n        <input v-model=\"nome\" type=\"text\" class=\"form-control\" id=\"txtname\">\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"txtalturaMetros\" class=\"form-label\">Altura em metros:</label>\n        <input v-model=\"alturaMetros\" type=\"number\" class=\"form-control\" id=\"txtalturaMetros\" min=\"0\">\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"txtalturaCentimetros\" class=\"form-label\">Altura em centímetros:</label>\n        <input v-model=\"alturaCentimetros\" type=\"number\" class=\"form-control\" id=\"txtalturaCentimetros\" min=\"0\" max=\"99\">\n      </div>\n\n      <div class=\"mb-3\">\n        <label for=\"txtpeso\" class=\"form-label\">Peso:</label>\n        <input v-model=\"peso\" type=\"number\" class=\"form-control\" id=\"txtpeso\" min=\"0\">\n      </div>\n\n      <button @click=\"calcularIMC\" class=\"btn btn-success btn-block\">Verificar</button>\n    </section>\n\n    <div id=\"res\" class=\"mt-4 text-center\">\n      <!-- Resultado será exibido aqui -->\n      {{ resultado }}\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      nome: \"\",\n      alturaMetros: 0,\n      alturaCentimetros: 0,\n      peso: 0,\n      resultado: \"\",\n    };\n  },\n  methods: {\n    calcularIMC() {\n      const alturaTotalMetros = this.alturaMetros + this.alturaCentimetros / 100;\n      const imc = this.peso / (alturaTotalMetros * alturaTotalMetros);\n\n      if (imc < 18.5) {\n        this.resultado = `${this.nome}, seu IMC é ${imc.toFixed(2)}, você está abaixo do peso.`;\n      } else if (imc < 25) {\n        this.resultado = `${this.nome}, seu IMC é ${imc.toFixed(2)}, seu peso está normal.`;\n      } else if (imc < 30) {\n        this.resultado = `${this.nome}, seu IMC é ${imc.toFixed(2)}, você está acima do peso.`;\n      } else {\n        this.resultado = `${this.nome}, seu IMC é ${imc.toFixed(2)}, você está obeso.`;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  margin: 0;\n  background-color: #f8f9fa; /* Cor de fundo */\n}\n\nsection {\n  background-color: #ffffff; /* Cor de fundo do formulário */\n  padding: 20px;\n  border-radius: 10px; /* Borda arredondada */\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1); /* Sombra */\n}\n\n#res {\n  margin-top: 20px;\n  text-align: center;\n  color: #155724; /* Cor do texto */\n  background-color: #d4edda; /* Cor de fundo do resultado */\n  padding: 10px;\n  border-radius: 5px; /* Borda arredondada */\n}\n</style>\n"],"mappings":";;AAsCA;EACAA,IAAA,WAAAA,KAAA;IACA;MACAC,IAAA;MACAC,YAAA;MACAC,iBAAA;MACAC,IAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA,WAAAA,YAAA;MACA,IAAAC,iBAAA,QAAAN,YAAA,QAAAC,iBAAA;MACA,IAAAM,GAAA,QAAAL,IAAA,IAAAI,iBAAA,GAAAA,iBAAA;MAEA,IAAAC,GAAA;QACA,KAAAJ,SAAA,MAAAK,MAAA,MAAAT,IAAA,qBAAAS,MAAA,CAAAD,GAAA,CAAAE,OAAA;MACA,WAAAF,GAAA;QACA,KAAAJ,SAAA,MAAAK,MAAA,MAAAT,IAAA,qBAAAS,MAAA,CAAAD,GAAA,CAAAE,OAAA;MACA,WAAAF,GAAA;QACA,KAAAJ,SAAA,MAAAK,MAAA,MAAAT,IAAA,qBAAAS,MAAA,CAAAD,GAAA,CAAAE,OAAA;MACA;QACA,KAAAN,SAAA,MAAAK,MAAA,MAAAT,IAAA,qBAAAS,MAAA,CAAAD,GAAA,CAAAE,OAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}