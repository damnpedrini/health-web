{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nexport default {\n  name: 'CalculatorPage',\n  data: function data() {\n    return {\n      nome: '',\n      altura: null,\n      peso: null,\n      resultado: ''\n    };\n  },\n  methods: {\n    calcularIMC: function calcularIMC() {\n      var alturaEmMetros = this.altura / 100;\n      var peso = parseFloat(this.peso);\n      var imc = peso / (alturaEmMetros * alturaEmMetros);\n      var classificacao = 'Classificação não disponível';\n      if (imc < 16) {\n        classificacao = 'Baixo peso, muito grave';\n      } else if (imc >= 16 && imc <= 16.99) {\n        classificacao = 'Baixo peso grave';\n      } else if (imc >= 17 && imc <= 18.49) {\n        classificacao = 'Baixo peso';\n      } else if (imc >= 18.50 && imc <= 24.99) {\n        classificacao = 'Peso normal';\n      } else if (imc >= 25 && imc <= 29.99) {\n        classificacao = 'Sobrepeso';\n      } else if (imc >= 30 && imc <= 34.99) {\n        classificacao = 'Obesidade grau I';\n      } else if (imc >= 35 && imc <= 39.99) {\n        classificacao = 'Obesidade grau II';\n      } else if (imc >= 40) {\n        classificacao = 'Obesidade grau III';\n      }\n      this.resultado = \"\".concat(this.nome, \" possui um IMC igual a \").concat(imc.toFixed(2), \", sendo classificado como: \").concat(classificacao);\n    }\n  }\n};","map":{"version":3,"names":["name","data","nome","altura","peso","resultado","methods","calcularIMC","alturaEmMetros","parseFloat","imc","classificacao","concat","toFixed"],"sources":["src/views/CalculatorPage.vue"],"sourcesContent":["<template>\n    <div>\n      <header class=\"text-center mb-4\">\n        <h1 class=\"display-4 text-primary\">Cálculo do Índice de Massa Corporal</h1>\n      </header>\n  \n      <section>\n        <div class=\"mb-3\">\n          <label for=\"txtname\" class=\"form-label\">Nome:</label>\n          <input v-model=\"nome\" type=\"text\" class=\"form-control\" id=\"txtname\">\n        </div>\n  \n        <div class=\"mb-3\">\n          <label for=\"txtaltura\" class=\"form-label\">Altura em centímetros:</label>\n          <input v-model=\"altura\" type=\"number\" class=\"form-control\" id=\"txtaltura\" min=\"0\">\n        </div>\n  \n        <div class=\"mb-3\">\n          <label for=\"txtpeso\" class=\"form-label\">Peso:</label>\n          <input v-model=\"peso\" type=\"number\" class=\"form-control\" id=\"txtpeso\" min=\"0\">\n        </div>\n  \n        <button @click=\"calcularIMC\" class=\"btn btn-success\">Verificar</button>\n      </section>\n  \n      <div id=\"res\" class=\"text-center\">\n        <!-- Resultado será exibido aqui -->\n        {{ resultado }}\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name : 'CalculatorPage', \n    data() {\n      return {\n        nome: '',\n        altura: null,\n        peso: null,\n        resultado: ''\n      };\n    },\n    methods: {\n      calcularIMC() {\n        const alturaEmMetros = this.altura / 100;\n        const peso = parseFloat(this.peso);\n  \n        const imc = peso / (alturaEmMetros * alturaEmMetros);\n  \n        let classificacao = 'Classificação não disponível';\n  \n        if (imc < 16) {\n          classificacao = 'Baixo peso, muito grave';\n        } else if (imc >= 16 && imc <= 16.99) {\n          classificacao = 'Baixo peso grave';\n        } else if (imc >= 17 && imc <= 18.49) {\n          classificacao = 'Baixo peso';\n        } else if (imc >= 18.50 && imc <= 24.99) {\n          classificacao = 'Peso normal';\n        } else if (imc >= 25 && imc <= 29.99) {\n          classificacao = 'Sobrepeso';\n        } else if (imc >= 30 && imc <= 34.99) {\n          classificacao = 'Obesidade grau I';\n        } else if (imc >= 35 && imc <= 39.99) {\n          classificacao = 'Obesidade grau II';\n        } else if (imc >= 40) {\n          classificacao = 'Obesidade grau III';\n        }\n  \n        this.resultado = `${this.nome} possui um IMC igual a ${imc.toFixed(2)}, sendo classificado como: ${classificacao}`;\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  body {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    margin: 0;\n    background-color: #f8f9fa; /* Cor de fundo */\n  }\n  \n  section {\n    width: 400px;\n    background-color: #ffffff; /* Cor de fundo do formulário */\n    padding: 20px;\n    border-radius: 10px; /* Borda arredondada */\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1); /* Sombra */\n  }\n  \n  #res {\n    margin-top: 20px;\n    text-align: center;\n    color: #155724; /* Cor do texto */\n    background-color: #d4edda; /* Cor de fundo do resultado */\n    padding: 10px;\n    border-radius: 5px; /* Borda arredondada */\n  }\n  </style>\n  "],"mappings":";;AAiCA;EACAA,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,IAAA;MACAC,MAAA;MACAC,IAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA,WAAAA,YAAA;MACA,IAAAC,cAAA,QAAAL,MAAA;MACA,IAAAC,IAAA,GAAAK,UAAA,MAAAL,IAAA;MAEA,IAAAM,GAAA,GAAAN,IAAA,IAAAI,cAAA,GAAAA,cAAA;MAEA,IAAAG,aAAA;MAEA,IAAAD,GAAA;QACAC,aAAA;MACA,WAAAD,GAAA,UAAAA,GAAA;QACAC,aAAA;MACA,WAAAD,GAAA,UAAAA,GAAA;QACAC,aAAA;MACA,WAAAD,GAAA,aAAAA,GAAA;QACAC,aAAA;MACA,WAAAD,GAAA,UAAAA,GAAA;QACAC,aAAA;MACA,WAAAD,GAAA,UAAAA,GAAA;QACAC,aAAA;MACA,WAAAD,GAAA,UAAAA,GAAA;QACAC,aAAA;MACA,WAAAD,GAAA;QACAC,aAAA;MACA;MAEA,KAAAN,SAAA,MAAAO,MAAA,MAAAV,IAAA,6BAAAU,MAAA,CAAAF,GAAA,CAAAG,OAAA,oCAAAD,MAAA,CAAAD,aAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}